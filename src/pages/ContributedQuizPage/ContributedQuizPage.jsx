import { useEffect, useRef, useState } from "react";
import { useSelector } from "react-redux";
import { MdExpandMore as ExpandButton } from "react-icons/md";
import ContributedQuizList from "../../components/ContributedQuizList/ContributedQuizList";
import contributedService from "../../services/contributedService";
import subjectService from "../../services/subjectService";
import chapterService from "../../services/chapterService";

export default function ContributedQuizPage() {
  const { account, isAuthenticated } = useSelector((state) => state.user);
  const mode = useSelector((state) => state.viewMode.mode);

  const [subjects, setSubjects] = useState([]);
  const [chapters, setChapters] = useState([]);

  const [selectedSubject, setSelectedSubject] = useState(null);
  const [selectedChapter, setSelectedChapter] = useState(null);

  const [expandSubject, setExpandSubject] = useState(false);
  const [expandChapter, setExpandChapter] = useState(false);

  const [selectedFile, setSelectedFile] = useState(null);
  const [uploadStatus, setUploadStatus] = useState("");

  const [suggestedNote, setSuggestedNote] = useState("");
  const [quizName, setQuizName] = useState("");
  const [contributionStats, setContributionStats] = useState(null);

  const subjectRef = useRef(null);
  const chapterRef = useRef(null);

  // Fetch contribution stats
  useEffect(() => {
    if (!isAuthenticated || !account?.accessToken) return;
    contributedService
      .getStats()
      .then((res) => setContributionStats(res.data))
      .catch((err) => console.error("L·ªói khi l·∫•y th·ªëng k√™:", err));
  }, [isAuthenticated, account?.accessToken]);

  // Close dropdowns when clicking outside
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (subjectRef.current && !subjectRef.current.contains(event.target)) {
        setExpandSubject(false);
      }
      if (chapterRef.current && !chapterRef.current.contains(event.target)) {
        setExpandChapter(false);
      }
    };
    document.addEventListener("click", handleClickOutside);
    return () => document.removeEventListener("click", handleClickOutside);
  }, []);

  // Fetch subjects
  useEffect(() => {
    subjectService
      .getAll()
      .then((res) => setSubjects(res.data || []))
      .catch((err) => console.error("L·ªói khi l·∫•y danh s√°ch m√¥n h·ªçc:", err));
  }, []);

  // Fetch chapters for selected subject
  useEffect(() => {
    if (selectedSubject && selectedSubject._id) {
      chapterService
        .getBySubject(selectedSubject._id)
        .then((res) => setChapters(res.data || []))
        .catch((err) => console.error("L·ªói khi l·∫•y ch∆∞∆°ng:", err));
    } else {
      setChapters([]);
    }
  }, [selectedSubject]);

  // Upload CSV
  const handleFileUpload = async () => {
    if (!selectedFile || !selectedSubject) {
      setUploadStatus("‚ö†Ô∏è Vui l√≤ng ch·ªçn m√¥n h·ªçc (ho·∫∑c 'Kh√°c') v√† file CSV!");
      return;
    }

    if (selectedSubject._id !== null && !selectedChapter) {
      setUploadStatus("‚ö†Ô∏è Vui l√≤ng ch·ªçn ch∆∞∆°ng cho m√¥n ƒë√£ ch·ªçn!");
      return;
    }

    if (!account || !account.accessToken) {
      setUploadStatus("‚ö†Ô∏è B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc khi t·∫£i l√™n!");
      return;
    }
    if (!quizName.trim()) {
      setUploadStatus("‚ö†Ô∏è Vui l√≤ng nh·∫≠p t√™n b·ªô ƒë·ªÅ tr∆∞·ªõc khi t·∫£i l√™n!");
      return;
    }

    if (contributionStats && contributionStats.remaining === 0) {
      setUploadStatus(
        "üö´ B·∫°n ƒë√£ ƒë·∫°t gi·ªõi h·∫°n ƒë√≥ng g√≥p ƒë·ªÅ trong 7 ng√†y g·∫ßn nh·∫•t!"
      );
      return;
    }

    const formData = new FormData();
    formData.append("file", selectedFile);
    formData.append("name", quizName);
    formData.append("subjectId", selectedSubject._id ?? "");
    formData.append("chapterId", selectedChapter?._id ?? "");
    formData.append("suggestedNote", suggestedNote);

    try {
      setUploadStatus("‚è≥ ƒêang t·∫£i l√™n...");
      await contributedService.uploadCSV(formData);
      setUploadStatus("‚úÖ T·∫£i l√™n th√†nh c√¥ng!");

      // refresh stats
      contributedService
        .getStats()
        .then((res) => setContributionStats(res.data))
        .catch(() => {});

      // reset
      setSelectedFile(null);
      setSelectedSubject(null);
      setSelectedChapter(null);
      setSuggestedNote("");
      setQuizName("");
      const fileEl = document.getElementById("fileInput");
      if (fileEl) fileEl.value = "";
    } catch (err) {
      console.error("‚ùå Upload CSV error:", err);
      setUploadStatus(
        err.response?.data?.message ||
          "‚ùå L·ªói khi t·∫£i l√™n. Vui l√≤ng th·ª≠ l·∫°i sau!"
      );
    }
  };

  const getStatusColorClass = () => {
    if (uploadStatus.includes("‚úÖ")) return "text-green-700";
    if (
      uploadStatus.includes("‚ùå") ||
      uploadStatus.includes("‚ö†Ô∏è") ||
      uploadStatus.includes("üö´")
    )
      return "text-red-600";
    if (uploadStatus.includes("‚è≥")) return "text-orange-500";
    return "";
  };

  return (
    <div className="w-[95%] mx-auto py-4 sm:py-6 flex flex-col gap-8">
      {/* Intro */}
      <div className="bg-white rounded-xl shadow-lg shadow-gray-200 p-8 text-center">
        <h1 className="text-4xl font-extrabold text-green-700">
          ƒê√≥ng G√≥p ƒê·ªÅ Tr·∫Øc Nghi·ªám
        </h1>
        <p className="mt-4 text-gray-600 text-lg">
          H√£y c√πng ƒë√≥ng g√≥p nh·ªØng b·ªô c√¢u h·ªèi ch·∫•t l∆∞·ª£ng ƒë·ªÉ c·ªông ƒë·ªìng c√πng h·ªçc
          t·ªët h∆°n! B·∫°n c√≥ th·ªÉ t·∫£i l√™n file CSV ch·ª©a ƒë·ªÅ. T·∫•t c·∫£ ƒë·ªÅ g·ª≠i l√™n s·∫Ω
          ƒë∆∞·ª£c ki·ªÉm duy·ªát tr∆∞·ªõc khi xu·∫•t b·∫£n ch√≠nh th·ª©c.
        </p>
      </div>

      {/* Content */}
      <div className="bg-white rounded-xl shadow-lg shadow-gray-200 p-8 min-h-[400px]">
        {account.role === "Admin" && mode === "edit" ? (
          <ContributedQuizList />
        ) : (
          <div className="flex flex-col gap-4">
            {/* Subject dropdown */}
            <div ref={subjectRef}>
              <div className="flex items-center gap-4 flex-col sm:flex-row">
                <p className="w-full sm:w-1/4 font-semibold text-lg text-green-700">
                  Ch·ªçn m√¥n h·ªçc:
                </p>
                <div className="flex items-center w-full sm:w-3/4 relative">
                  <input
                    type="text"
                    readOnly
                    value={
                      selectedSubject && selectedSubject._id !== null
                        ? selectedSubject.name
                        : selectedSubject && selectedSubject._id === null
                        ? "Kh√°c"
                        : ""
                    }
                    placeholder="Ch·ªçn m√¥n h·ªçc..."
                    onClick={() => setExpandSubject((prev) => !prev)}
                    className="w-full py-2.5 px-4 rounded-lg border border-gray-300 text-base bg-gray-50"
                  />
                  <ExpandButton
                    className={`absolute right-2.5 text-3xl text-green-700 cursor-pointer transition-transform duration-300 ${
                      expandSubject ? "rotate-180" : ""
                    }`}
                    onClick={() => setExpandSubject((prev) => !prev)}
                  />
                </div>
              </div>

              <div
                className={`overflow-y-auto bg-gray-100 rounded-lg transition-[max-height] duration-300 ease-in-out shadow-md ${
                  expandSubject ? "max-h-[200px]" : "max-h-0"
                }`}
              >
                {subjects.map((subject) => (
                  <div
                    key={subject._id}
                    className="py-3 px-4 text-base bg-white m-1.5 rounded-lg cursor-pointer hover:bg-green-400 hover:text-white transition-all duration-200"
                    onClick={() => {
                      setSelectedSubject(subject);
                      setExpandSubject(false);
                      setSelectedChapter(null);
                      setSuggestedNote("");
                    }}
                  >
                    {subject.name}
                  </div>
                ))}

                <div
                  key="other-subject"
                  className="py-3 px-4 text-base bg-white m-1.5 rounded-lg cursor-pointer hover:bg-green-400 hover:text-white transition-all duration-200"
                  onClick={() => {
                    setSelectedSubject({ _id: null, name: "Kh√°c" });
                    setExpandSubject(false);
                    setSelectedChapter(null);
                    setChapters([]);
                    setSuggestedNote("");
                  }}
                >
                  Kh√°c
                </div>
              </div>
            </div>

            {/* Chapter dropdown */}
            {selectedSubject && selectedSubject._id !== null && (
              <div className="mt-3" ref={chapterRef}>
                <div className="flex items-center gap-4 flex-col sm:flex-row">
                  <p className="w-full sm:w-1/4 font-semibold text-lg text-green-700">
                    Ch·ªçn ch∆∞∆°ng:
                  </p>
                  <div className="flex items-center w-full sm:w-3/4 relative">
                    <input
                      type="text"
                      readOnly
                      value={selectedChapter ? selectedChapter.name : ""}
                      placeholder="Ch·ªçn ch∆∞∆°ng..."
                      onClick={() => setExpandChapter((prev) => !prev)}
                      className="w-full py-2.5 px-4 rounded-lg border border-gray-300 text-base bg-gray-50"
                    />
                    <ExpandButton
                      className={`absolute right-2.5 text-3xl text-green-700 cursor-pointer transition-transform duration-300 ${
                        expandChapter ? "rotate-180" : ""
                      }`}
                      onClick={() => setExpandChapter((prev) => !prev)}
                    />
                  </div>
                </div>

                <div
                  className={`overflow-y-auto bg-gray-100 rounded-lg transition-[max-height] duration-300 ease-in-out shadow-md ${
                    expandChapter ? "max-h-[200px]" : "max-h-0"
                  }`}
                >
                  {chapters.map((chapter) => (
                    <div
                      key={chapter._id}
                      className="py-3 px-4 text-base bg-white m-1.5 rounded-lg cursor-pointer hover:bg-green-400 hover:text-white transition-all duration-200"
                      onClick={() => {
                        setSelectedChapter(chapter);
                        setExpandChapter(false);
                      }}
                    >
                      {chapter.name}
                    </div>
                  ))}
                </div>
              </div>
            )}

            {/* Quiz name input */}
            <div className="mt-3 mb-3 flex flex-col gap-2">
              <p className="font-semibold text-lg text-green-700">T√™n b·ªô ƒë·ªÅ:</p>
              <input
                type="text"
                placeholder="Nh·∫≠p t√™n b·ªô ƒë·ªÅ (VD: ƒê·ªÅ √¥n thi Gi·ªØa k·ª≥ To√°n 12)..."
                value={quizName}
                onChange={(e) => setQuizName(e.target.value)}
                className="w-full py-2 px-3 border border-gray-300 rounded-lg text-base outline-none focus:border-green-700 focus:shadow-[0_0_4px_rgba(34,197,94,0.3)]"
              />
            </div>

            {/* If "Kh√°c" selected show suggestion textarea */}
            {selectedSubject && selectedSubject._id === null && (
              <div className="mt-3 flex flex-col gap-2">
                <p className="text-green-700 font-semibold">
                  B·∫°n ƒë√£ ch·ªçn <strong>Kh√°c</strong> ‚Äî vui l√≤ng nh·∫≠p t√™n m√¥n h·ªçc
                  v√† c√°c ch∆∞∆°ng b·∫°n mu·ªën g·ª£i √Ω:
                </p>
                <textarea
                  rows={3}
                  placeholder="V√≠ d·ª•: M√¥n L·∫≠p tr√¨nh Python ‚Äì c√°c ch∆∞∆°ng: C∆° b·∫£n, OOP, X·ª≠ l√Ω File..."
                  value={suggestedNote}
                  onChange={(e) => setSuggestedNote(e.target.value)}
                  className="w-full p-3 border border-gray-300 rounded-lg resize-y text-[15px] leading-relaxed outline-none focus:border-green-700 focus:shadow-[0_0_4px_rgba(34,197,94,0.25)]"
                />
                <p className="text-sm text-gray-600 mt-1 italic">
                  G·ª£i √Ω n√†y s·∫Ω ƒë∆∞·ª£c g·ª≠i c√πng file CSV ƒë·ªÉ admin xem x√©t v√† t·∫°o
                  m√¥n h·ªçc m·ªõi.
                </p>
              </div>
            )}

            {/* Upload box */}
            <div className="mt-6 bg-gray-50 border-2 border-dashed border-green-400 rounded-xl p-8 text-center text-gray-700 text-lg">
              <p className="mb-4">
                {selectedSubject && selectedChapter
                  ? `üìò B·∫°n ƒëang ƒë√≥ng g√≥p ƒë·ªÅ cho ch∆∞∆°ng "${selectedChapter.name}" thu·ªôc m√¥n "${selectedSubject.name}".`
                  : selectedSubject && selectedSubject._id === null
                  ? "üì¶ B·∫°n ƒëang ƒë√≥ng g√≥p ƒë·ªÅ v√† g·ª£i √Ω m√¥n h·ªçc m·ªõi."
                  : "Vui l√≤ng ch·ªçn m√¥n h·ªçc (ho·∫∑c 'Kh√°c') v√† file CSV ƒë·ªÉ b·∫Øt ƒë·∫ßu ƒë√≥ng g√≥p ƒë·ªÅ."}
              </p>

              {contributionStats && isAuthenticated && (
                <div className="mb-3 bg-blue-50 p-3.5 rounded-lg border-l-4 border-blue-500 text-base leading-relaxed">
                  <p>
                    üìä B·∫°n ƒë√£ ƒë√≥ng g√≥p{" "}
                    <strong>
                      {contributionStats.used}/{contributionStats.limit}
                    </strong>{" "}
                    ƒë·ªÅ trong 7 ng√†y g·∫ßn nh·∫•t.
                  </p>
                  {contributionStats.remaining === 0 ? (
                    <p className="text-red-500 font-semibold mt-1">
                      üö´ B·∫°n ƒë√£ ƒë·∫°t gi·ªõi h·∫°n {contributionStats.limit} ƒë·ªÅ! H√£y
                      th·ª≠ l·∫°i sau v√†i ng√†y nh√©.
                    </p>
                  ) : (
                    <p className="text-green-600 mt-1">
                      ‚úÖ B·∫°n c√≤n c√≥ th·ªÉ g·ª≠i th√™m{" "}
                      <strong>{contributionStats.remaining}</strong> ƒë·ªÅ.
                    </p>
                  )}
                </div>
              )}

              <div className="flex flex-col items-center gap-3 mt-4">
                <input
                  id="fileInput"
                  type="file"
                  accept=".csv"
                  onChange={(e) => setSelectedFile(e.target.files[0])}
                  className="bg-gray-100 border border-gray-300 rounded-lg p-2 cursor-pointer"
                />
                {selectedFile && (
                  <p className="text-base text-green-700 font-medium">
                    üìÑ {selectedFile.name}
                  </p>
                )}
                <button
                  className="bg-green-700 text-white border-none rounded-lg py-3 px-5 text-base font-semibold cursor-pointer transition-colors duration-200 hover:bg-green-800 disabled:opacity-50 disabled:cursor-not-allowed"
                  onClick={handleFileUpload}
                  disabled={contributionStats?.remaining === 0}
                >
                  T·∫£i L√™n CSV
                </button>
              </div>

              {uploadStatus && (
                <p
                  className={`mt-4 font-semibold text-center ${getStatusColorClass()}`}
                >
                  {uploadStatus}
                </p>
              )}
            </div>

            {/* Guide */}
            <div className="bg-white rounded-xl shadow-lg shadow-gray-200 p-8 leading-relaxed text-gray-700 mt-6">
              <h2 className="text-3xl font-bold text-green-700 mb-4 text-center">
                üìò H∆∞·ªõng D·∫´n Chuy·ªÉn ƒê·ªïi File Sang CSV
              </h2>
              <p className="text-center text-lg text-gray-600 mb-6">
                N·∫øu b·∫°n c√≥ b·ªô c√¢u h·ªèi ·ªü d·∫°ng{" "}
                <strong>PDF, Word, Excel ho·∫∑c TXT</strong>, b·∫°n c√≥ th·ªÉ d·ªÖ d√†ng
                chuy·ªÉn sang ƒë·ªãnh d·∫°ng CSV chu·∫©n tr∆∞·ªõc khi t·∫£i l√™n.
              </p>

              <ul className="list-none p-0 mb-6 flex flex-col gap-3">
                <li className="bg-gray-50 border-l-4 border-green-400 p-3 sm:px-4 rounded-lg transition-colors hover:bg-gray-100">
                  <strong>1Ô∏è‚É£ PDF ‚Üí CSV:</strong> D√πng ph·∫ßn m·ªÅm nh∆∞{" "}
                  <em>SmallPDF</em> ho·∫∑c <em>iLovePDF</em> ƒë·ªÉ xu·∫•t n·ªôi dung sang
                  Word, sau ƒë√≥ copy v√†o Excel r·ªìi l∆∞u d∆∞·ªõi d·∫°ng CSV.
                </li>
                <li className="bg-gray-50 border-l-4 border-green-400 p-3 sm:px-4 rounded-lg transition-colors hover:bg-gray-100">
                  <strong>2Ô∏è‚É£ Word (.docx) ‚Üí CSV:</strong> M·ªü file Word, copy
                  b·∫£ng c√¢u h·ªèi v√†o Excel, ƒë·∫£m b·∫£o m·ªói c·ªôt t∆∞∆°ng ·ª©ng v·ªõi:{" "}
                  <em>
                    {" "}
                    C√¢u h·ªèi | ƒê√°p √°n A | ƒê√°p √°n B | ƒê√°p √°n C | ƒê√°p √°n D | ƒê√°p √°n
                    ƒë√∫ng | Gi·∫£i th√≠ch
                  </em>
                  . Sau ƒë√≥{" "}
                  <strong>L∆∞u d∆∞·ªõi d·∫°ng ‚Üí CSV (Comma delimited)</strong>.
                </li>
                <li className="bg-gray-50 border-l-4 border-green-400 p-3 sm:px-4 rounded-lg transition-colors hover:bg-gray-100">
                  <strong>3Ô∏è‚É£ Excel (.xlsx) ‚Üí CSV:</strong> M·ªü file trong Excel,
                  ch·ªçn <strong>File ‚Üí Save As ‚Üí CSV (Comma delimited)</strong>.
                </li>
                <li className="bg-gray-50 border-l-4 border-green-400 p-3 sm:px-4 rounded-lg transition-colors hover:bg-gray-100">
                  <strong>4Ô∏è‚É£ TXT ‚Üí CSV:</strong> M·ªü b·∫±ng Excel ho·∫∑c Google
                  Sheets, d√πng t√≠nh nƒÉng ‚ÄúText to Columns‚Äù ƒë·ªÉ t√°ch c√°c ph·∫ßn c√¢u
                  h·ªèi, r·ªìi l∆∞u l·∫°i th√†nh CSV.
                </li>
              </ul>

              <div className="bg-gray-50 border border-gray-300 rounded-xl p-4 sm:p-5 my-6">
                <p className="text-lg font-bold text-green-700 mb-2">
                  üìÑ V√≠ d·ª• m·∫´u file CSV chu·∫©n:
                </p>
                <pre className="bg-gray-100 rounded-lg p-4 font-mono text-sm leading-relaxed text-gray-800 whitespace-pre-wrap overflow-x-auto">
                  {`question,option1,option2,option3,option4,answer,explain
Th·ªß ƒë√¥ c·ªßa Vi·ªát Nam l√† g√¨?,H·ªì Ch√≠ Minh,H√† N·ªôi,ƒê√† N·∫µng,H·∫£i Ph√≤ng,H√† N·ªôi,H√† N·ªôi l√† th·ªß ƒë√¥ c·ªßa Vi·ªát Nam.`}
                </pre>
                <p className="mt-1.5 text-sm text-gray-600 italic">
                  üëâ M·ªói d√≤ng l√† m·ªôt c√¢u h·ªèi, c√°c c·ªôt ƒë∆∞·ª£c ph√¢n t√°ch b·∫±ng d·∫•u
                  ph·∫©y (,).
                </p>
              </div>

              <p className="bg-gray-50 border border-dashed border-green-400 rounded-lg p-4 font-medium text-green-700 text-center">
                ‚öôÔ∏è <strong>L∆∞u √Ω:</strong> M·ªói d√≤ng trong file CSV n√™n ƒë·∫°i di·ªán
                cho <em>m·ªôt c√¢u h·ªèi</em>. H√£y ƒë·∫£m b·∫£o kh√¥ng c√≥ d·∫•u ph·∫©y kh√¥ng
                c·∫ßn thi·∫øt trong c√°c √¥ d·ªØ li·ªáu.
              </p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
